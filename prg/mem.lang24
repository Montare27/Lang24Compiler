#
#x: type_x
#y: type_y
#
#type_x = (a: int, b: char)
#type_y = {a: int, b: char}
#
#emptyFunc1(): void = {
#    return emptyFunc2();
#}
#
#main(a: int, b: int) : int = {
#    x.a = 32;
#    emptyFunc1();
#    return x.a;
#} {
#    t: int
#    u: [9]char
#}
#
#
#emptyFunc2(): void = {
#    return none;
#}

#selfCycle1 = {id: ^{new: [10][42](id: selfCycle1)}}
#typeFifth = typeFourth
#typeFourth = typeThird
#typeThird = typeSecond
#typeSecond = typeFirst
#typeFirst = int

#typPointerArrayS = ^[1]{id: typPointerArrayU}
#typPointerArrayU = ^[1](id: typPointerArrayS)
#typPointerTypeName = ^[1]typPointerArrayS

#tipOdZunaj = vmesniTip
#vmesniTip = {id: tipOdZnotrej}
#tipOdZnotrej = {id: (i: ^[1]tipOdZunaj, j: ^[1]^^tipOdZnotrej)}



#typPointerTypeName = typPointerArrayS


#main(): void = {
#
#    (x.a^).y^ = 10;
#
#} {
#    x: str
#    cmp = (y: ^int)
#    str = (a: ^cmp, b: int)
#}

#main1(): void = {
#    (x.a^).y^ = 10;
#    test();
#
#} {
#    x: str
#    cmp = (y: ^int)
#    str = (a: ^cmp, b: int)
#}

main2(): void = { #SL = 8,args = 24
    test(32);
    testX('a', 'b');
} {
    test(i: int): void = { # SL=0 args = 0
        return none;
    }

    testX(a:char, b:char) : int = { #SL = 0, args = 8
        test(12312); # We have an error here, we should not add 8b of SL
        return 23;
    }

    x: int
}

main3(): void = { # SL = 0, args = 0
    main2();
}
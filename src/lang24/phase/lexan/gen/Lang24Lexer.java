// Generated from D:/Study/UlJ/Compilers/gradle/lang24compiler/src/lang24/phase/lexan/Lang24Lexer.g4 by ANTLR 4.13.1

	package lang24.phase.lexan;
	import lang24.common.report.*;
	import lang24.data.token.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class Lang24Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENTS=1, STRING=2, CHARACTER=3, CARET=4, NOT=5, PLUS=6, MINUS=7, PREFIXOPERATOR=8, 
		POSTFIXOPERATOR=9, COLON=10, COMMA=11, DOT=12, LESS=13, GREATER=14, SEMICOLON=15, 
		NIL=16, VOID=17, OR=18, AND=19, SIZEOF=20, BOOL=21, CHAR=22, INT=23, IF=24, 
		ELSE=25, THEN=26, RETURN=27, WHILE=28, IDENTIFIER=29, NUMBER=30, TRUE=31, 
		FALSE=32, BOOLVAL=33, LBRACE=34, RBRACE=35, LPARENTHESIS=36, RPARENTHESIS=37, 
		LBRACKET=38, RBRACKET=39, EQUALS_R=40, NOTEQUALS_R=41, LESS_OR_EQUALS_R=42, 
		GREATER_OR_EQUALS_R=43, DIVIDE=44, STAR=45, PERCENT=46, EQUALS=47, WS=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ESC_SEQ", "VALIDCHAR", "HEXCHAR", "COMMENTS", "STRING", "CHARACTER", 
			"CARET", "NOT", "PLUS", "MINUS", "PREFIXOPERATOR", "POSTFIXOPERATOR", 
			"COLON", "COMMA", "DOT", "LESS", "GREATER", "SEMICOLON", "NIL", "VOID", 
			"OR", "AND", "SIZEOF", "BOOL", "CHAR", "INT", "IF", "ELSE", "THEN", "RETURN", 
			"WHILE", "IDENTIFIER", "NUMBER", "DIGIT", "TRUE", "FALSE", "BOOLVAL", 
			"LBRACE", "RBRACE", "LPARENTHESIS", "RPARENTHESIS", "LBRACKET", "RBRACKET", 
			"EQUALS_R", "NOTEQUALS_R", "LESS_OR_EQUALS_R", "GREATER_OR_EQUALS_R", 
			"DIVIDE", "STAR", "PERCENT", "EQUALS", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'^'", "'not'", "'+'", "'-'", null, null, "':'", 
			"','", "'.'", "'<'", "'>'", "';'", "'nil'", "'void'", "'or'", "'AND'", 
			"'sizeof'", "'bool'", "'char'", "'int'", "'if'", "'else'", "'then'", 
			"'return'", "'while'", null, null, "'true'", "'false'", null, "'{'", 
			"'}'", "'('", "')'", "'['", "']'", "'=='", "'!='", "'<='", "'>='", "'/'", 
			"'*'", "'%'", "'='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMENTS", "STRING", "CHARACTER", "CARET", "NOT", "PLUS", "MINUS", 
			"PREFIXOPERATOR", "POSTFIXOPERATOR", "COLON", "COMMA", "DOT", "LESS", 
			"GREATER", "SEMICOLON", "NIL", "VOID", "OR", "AND", "SIZEOF", "BOOL", 
			"CHAR", "INT", "IF", "ELSE", "THEN", "RETURN", "WHILE", "IDENTIFIER", 
			"NUMBER", "TRUE", "FALSE", "BOOLVAL", "LBRACE", "RBRACE", "LPARENTHESIS", 
			"RPARENTHESIS", "LBRACKET", "RBRACKET", "EQUALS_R", "NOTEQUALS_R", "LESS_OR_EQUALS_R", 
			"GREATER_OR_EQUALS_R", "DIVIDE", "STAR", "PERCENT", "EQUALS", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    @Override
		public LocLogToken nextToken() {
			return (LocLogToken) super.nextToken();
		}

		@Override
		public void notifyListeners(LexerNoViableAltException e) {
	        var currentToken = new LocLogToken(_tokenFactorySourcePair, _type, _channel, _tokenStartCharIndex, _input.index());
			throw new Report.Error(currentToken, "token recognition error: " + currentToken.getText());
		}


	public Lang24Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lang24Lexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u00000\u0134\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0005\u0003u\b\u0003\n\u0003\f\u0003x\t"+
		"\u0003\u0001\u0003\u0003\u0003{\b\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0005"+
		"\u0004\u0085\b\u0004\n\u0004\f\u0004\u0088\t\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0003\u0005\u0090\b\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0003\n\u00a2\b\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0005\u001f\u00f3\b\u001f\n\u001f\f\u001f"+
		"\u00f6\t\u001f\u0001 \u0004 \u00f9\b \u000b \f \u00fa\u0001!\u0001!\u0001"+
		"\"\u0001\"\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001#\u0001#"+
		"\u0001#\u0001$\u0001$\u0003$\u010c\b$\u0001%\u0001%\u0001&\u0001&\u0001"+
		"\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001*\u0001*\u0001+\u0001+\u0001"+
		"+\u0001,\u0001,\u0001,\u0001-\u0001-\u0001-\u0001.\u0001.\u0001.\u0001"+
		"/\u0001/\u00010\u00010\u00011\u00011\u00012\u00012\u00013\u00043\u012f"+
		"\b3\u000b3\f3\u0130\u00013\u00013\u0000\u00004\u0001\u0000\u0003\u0000"+
		"\u0005\u0000\u0007\u0001\t\u0002\u000b\u0003\r\u0004\u000f\u0005\u0011"+
		"\u0006\u0013\u0007\u0015\b\u0017\t\u0019\n\u001b\u000b\u001d\f\u001f\r"+
		"!\u000e#\u000f%\u0010\'\u0011)\u0012+\u0013-\u0014/\u00151\u00163\u0017"+
		"5\u00187\u00199\u001a;\u001b=\u001c?\u001dA\u001eC\u0000E\u001fG I!K\""+
		"M#O$Q%S&U\'W(Y)[*]+_,a-c.e/g0\u0001\u0000\n\b\u0000\"\"\'\'\\\\bbffnn"+
		"rrtt\u0001\u0000 ~\u0002\u000009AF\u0002\u0000\n\n\r\r\u0002\u0000\"\""+
		"\\\\\u0002\u0000\'\'\\\\\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u0000"+
		"09\u0003\u0000\t\n\r\r  \u013d\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000"+
		"\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M"+
		"\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000"+
		"\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000"+
		"\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000["+
		"\u0001\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000"+
		"\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001\u0000\u0000\u0000"+
		"\u0000e\u0001\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0001i"+
		"\u0001\u0000\u0000\u0000\u0003l\u0001\u0000\u0000\u0000\u0005n\u0001\u0000"+
		"\u0000\u0000\u0007r\u0001\u0000\u0000\u0000\t\u0080\u0001\u0000\u0000"+
		"\u0000\u000b\u008b\u0001\u0000\u0000\u0000\r\u0093\u0001\u0000\u0000\u0000"+
		"\u000f\u0095\u0001\u0000\u0000\u0000\u0011\u0099\u0001\u0000\u0000\u0000"+
		"\u0013\u009b\u0001\u0000\u0000\u0000\u0015\u00a1\u0001\u0000\u0000\u0000"+
		"\u0017\u00a3\u0001\u0000\u0000\u0000\u0019\u00a5\u0001\u0000\u0000\u0000"+
		"\u001b\u00a7\u0001\u0000\u0000\u0000\u001d\u00a9\u0001\u0000\u0000\u0000"+
		"\u001f\u00ab\u0001\u0000\u0000\u0000!\u00ad\u0001\u0000\u0000\u0000#\u00af"+
		"\u0001\u0000\u0000\u0000%\u00b1\u0001\u0000\u0000\u0000\'\u00b5\u0001"+
		"\u0000\u0000\u0000)\u00ba\u0001\u0000\u0000\u0000+\u00bd\u0001\u0000\u0000"+
		"\u0000-\u00c1\u0001\u0000\u0000\u0000/\u00c8\u0001\u0000\u0000\u00001"+
		"\u00cd\u0001\u0000\u0000\u00003\u00d2\u0001\u0000\u0000\u00005\u00d6\u0001"+
		"\u0000\u0000\u00007\u00d9\u0001\u0000\u0000\u00009\u00de\u0001\u0000\u0000"+
		"\u0000;\u00e3\u0001\u0000\u0000\u0000=\u00ea\u0001\u0000\u0000\u0000?"+
		"\u00f0\u0001\u0000\u0000\u0000A\u00f8\u0001\u0000\u0000\u0000C\u00fc\u0001"+
		"\u0000\u0000\u0000E\u00fe\u0001\u0000\u0000\u0000G\u0103\u0001\u0000\u0000"+
		"\u0000I\u010b\u0001\u0000\u0000\u0000K\u010d\u0001\u0000\u0000\u0000M"+
		"\u010f\u0001\u0000\u0000\u0000O\u0111\u0001\u0000\u0000\u0000Q\u0113\u0001"+
		"\u0000\u0000\u0000S\u0115\u0001\u0000\u0000\u0000U\u0117\u0001\u0000\u0000"+
		"\u0000W\u0119\u0001\u0000\u0000\u0000Y\u011c\u0001\u0000\u0000\u0000["+
		"\u011f\u0001\u0000\u0000\u0000]\u0122\u0001\u0000\u0000\u0000_\u0125\u0001"+
		"\u0000\u0000\u0000a\u0127\u0001\u0000\u0000\u0000c\u0129\u0001\u0000\u0000"+
		"\u0000e\u012b\u0001\u0000\u0000\u0000g\u012e\u0001\u0000\u0000\u0000i"+
		"j\u0005\\\u0000\u0000jk\u0007\u0000\u0000\u0000k\u0002\u0001\u0000\u0000"+
		"\u0000lm\u0007\u0001\u0000\u0000m\u0004\u0001\u0000\u0000\u0000no\u0005"+
		"\\\u0000\u0000op\u0007\u0002\u0000\u0000pq\u0007\u0002\u0000\u0000q\u0006"+
		"\u0001\u0000\u0000\u0000rv\u0005#\u0000\u0000su\b\u0003\u0000\u0000ts"+
		"\u0001\u0000\u0000\u0000ux\u0001\u0000\u0000\u0000vt\u0001\u0000\u0000"+
		"\u0000vw\u0001\u0000\u0000\u0000wz\u0001\u0000\u0000\u0000xv\u0001\u0000"+
		"\u0000\u0000y{\u0005\r\u0000\u0000zy\u0001\u0000\u0000\u0000z{\u0001\u0000"+
		"\u0000\u0000{|\u0001\u0000\u0000\u0000|}\u0005\n\u0000\u0000}~\u0001\u0000"+
		"\u0000\u0000~\u007f\u0006\u0003\u0000\u0000\u007f\b\u0001\u0000\u0000"+
		"\u0000\u0080\u0086\u0005\"\u0000\u0000\u0081\u0085\u0003\u0001\u0000\u0000"+
		"\u0082\u0085\u0003\u0005\u0002\u0000\u0083\u0085\b\u0004\u0000\u0000\u0084"+
		"\u0081\u0001\u0000\u0000\u0000\u0084\u0082\u0001\u0000\u0000\u0000\u0084"+
		"\u0083\u0001\u0000\u0000\u0000\u0085\u0088\u0001\u0000\u0000\u0000\u0086"+
		"\u0084\u0001\u0000\u0000\u0000\u0086\u0087\u0001\u0000\u0000\u0000\u0087"+
		"\u0089\u0001\u0000\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0089"+
		"\u008a\u0005\"\u0000\u0000\u008a\n\u0001\u0000\u0000\u0000\u008b\u008f"+
		"\u0005\'\u0000\u0000\u008c\u0090\u0003\u0001\u0000\u0000\u008d\u0090\u0003"+
		"\u0005\u0002\u0000\u008e\u0090\b\u0005\u0000\u0000\u008f\u008c\u0001\u0000"+
		"\u0000\u0000\u008f\u008d\u0001\u0000\u0000\u0000\u008f\u008e\u0001\u0000"+
		"\u0000\u0000\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u0092\u0005\'\u0000"+
		"\u0000\u0092\f\u0001\u0000\u0000\u0000\u0093\u0094\u0005^\u0000\u0000"+
		"\u0094\u000e\u0001\u0000\u0000\u0000\u0095\u0096\u0005n\u0000\u0000\u0096"+
		"\u0097\u0005o\u0000\u0000\u0097\u0098\u0005t\u0000\u0000\u0098\u0010\u0001"+
		"\u0000\u0000\u0000\u0099\u009a\u0005+\u0000\u0000\u009a\u0012\u0001\u0000"+
		"\u0000\u0000\u009b\u009c\u0005-\u0000\u0000\u009c\u0014\u0001\u0000\u0000"+
		"\u0000\u009d\u00a2\u0003\u000f\u0007\u0000\u009e\u00a2\u0003\u0011\b\u0000"+
		"\u009f\u00a2\u0003\u0013\t\u0000\u00a0\u00a2\u0003\r\u0006\u0000\u00a1"+
		"\u009d\u0001\u0000\u0000\u0000\u00a1\u009e\u0001\u0000\u0000\u0000\u00a1"+
		"\u009f\u0001\u0000\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2"+
		"\u0016\u0001\u0000\u0000\u0000\u00a3\u00a4\u0003\r\u0006\u0000\u00a4\u0018"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005:\u0000\u0000\u00a6\u001a\u0001"+
		"\u0000\u0000\u0000\u00a7\u00a8\u0005,\u0000\u0000\u00a8\u001c\u0001\u0000"+
		"\u0000\u0000\u00a9\u00aa\u0005.\u0000\u0000\u00aa\u001e\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ac\u0005<\u0000\u0000\u00ac \u0001\u0000\u0000\u0000\u00ad"+
		"\u00ae\u0005>\u0000\u0000\u00ae\"\u0001\u0000\u0000\u0000\u00af\u00b0"+
		"\u0005;\u0000\u0000\u00b0$\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005n"+
		"\u0000\u0000\u00b2\u00b3\u0005i\u0000\u0000\u00b3\u00b4\u0005l\u0000\u0000"+
		"\u00b4&\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005v\u0000\u0000\u00b6\u00b7"+
		"\u0005o\u0000\u0000\u00b7\u00b8\u0005i\u0000\u0000\u00b8\u00b9\u0005d"+
		"\u0000\u0000\u00b9(\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005o\u0000\u0000"+
		"\u00bb\u00bc\u0005r\u0000\u0000\u00bc*\u0001\u0000\u0000\u0000\u00bd\u00be"+
		"\u0005A\u0000\u0000\u00be\u00bf\u0005N\u0000\u0000\u00bf\u00c0\u0005D"+
		"\u0000\u0000\u00c0,\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005s\u0000\u0000"+
		"\u00c2\u00c3\u0005i\u0000\u0000\u00c3\u00c4\u0005z\u0000\u0000\u00c4\u00c5"+
		"\u0005e\u0000\u0000\u00c5\u00c6\u0005o\u0000\u0000\u00c6\u00c7\u0005f"+
		"\u0000\u0000\u00c7.\u0001\u0000\u0000\u0000\u00c8\u00c9\u0005b\u0000\u0000"+
		"\u00c9\u00ca\u0005o\u0000\u0000\u00ca\u00cb\u0005o\u0000\u0000\u00cb\u00cc"+
		"\u0005l\u0000\u0000\u00cc0\u0001\u0000\u0000\u0000\u00cd\u00ce\u0005c"+
		"\u0000\u0000\u00ce\u00cf\u0005h\u0000\u0000\u00cf\u00d0\u0005a\u0000\u0000"+
		"\u00d0\u00d1\u0005r\u0000\u0000\u00d12\u0001\u0000\u0000\u0000\u00d2\u00d3"+
		"\u0005i\u0000\u0000\u00d3\u00d4\u0005n\u0000\u0000\u00d4\u00d5\u0005t"+
		"\u0000\u0000\u00d54\u0001\u0000\u0000\u0000\u00d6\u00d7\u0005i\u0000\u0000"+
		"\u00d7\u00d8\u0005f\u0000\u0000\u00d86\u0001\u0000\u0000\u0000\u00d9\u00da"+
		"\u0005e\u0000\u0000\u00da\u00db\u0005l\u0000\u0000\u00db\u00dc\u0005s"+
		"\u0000\u0000\u00dc\u00dd\u0005e\u0000\u0000\u00dd8\u0001\u0000\u0000\u0000"+
		"\u00de\u00df\u0005t\u0000\u0000\u00df\u00e0\u0005h\u0000\u0000\u00e0\u00e1"+
		"\u0005e\u0000\u0000\u00e1\u00e2\u0005n\u0000\u0000\u00e2:\u0001\u0000"+
		"\u0000\u0000\u00e3\u00e4\u0005r\u0000\u0000\u00e4\u00e5\u0005e\u0000\u0000"+
		"\u00e5\u00e6\u0005t\u0000\u0000\u00e6\u00e7\u0005u\u0000\u0000\u00e7\u00e8"+
		"\u0005r\u0000\u0000\u00e8\u00e9\u0005n\u0000\u0000\u00e9<\u0001\u0000"+
		"\u0000\u0000\u00ea\u00eb\u0005w\u0000\u0000\u00eb\u00ec\u0005h\u0000\u0000"+
		"\u00ec\u00ed\u0005i\u0000\u0000\u00ed\u00ee\u0005l\u0000\u0000\u00ee\u00ef"+
		"\u0005e\u0000\u0000\u00ef>\u0001\u0000\u0000\u0000\u00f0\u00f4\u0007\u0006"+
		"\u0000\u0000\u00f1\u00f3\u0007\u0007\u0000\u0000\u00f2\u00f1\u0001\u0000"+
		"\u0000\u0000\u00f3\u00f6\u0001\u0000\u0000\u0000\u00f4\u00f2\u0001\u0000"+
		"\u0000\u0000\u00f4\u00f5\u0001\u0000\u0000\u0000\u00f5@\u0001\u0000\u0000"+
		"\u0000\u00f6\u00f4\u0001\u0000\u0000\u0000\u00f7\u00f9\u0003C!\u0000\u00f8"+
		"\u00f7\u0001\u0000\u0000\u0000\u00f9\u00fa\u0001\u0000\u0000\u0000\u00fa"+
		"\u00f8\u0001\u0000\u0000\u0000\u00fa\u00fb\u0001\u0000\u0000\u0000\u00fb"+
		"B\u0001\u0000\u0000\u0000\u00fc\u00fd\u0007\b\u0000\u0000\u00fdD\u0001"+
		"\u0000\u0000\u0000\u00fe\u00ff\u0005t\u0000\u0000\u00ff\u0100\u0005r\u0000"+
		"\u0000\u0100\u0101\u0005u\u0000\u0000\u0101\u0102\u0005e\u0000\u0000\u0102"+
		"F\u0001\u0000\u0000\u0000\u0103\u0104\u0005f\u0000\u0000\u0104\u0105\u0005"+
		"a\u0000\u0000\u0105\u0106\u0005l\u0000\u0000\u0106\u0107\u0005s\u0000"+
		"\u0000\u0107\u0108\u0005e\u0000\u0000\u0108H\u0001\u0000\u0000\u0000\u0109"+
		"\u010c\u0003E\"\u0000\u010a\u010c\u0003G#\u0000\u010b\u0109\u0001\u0000"+
		"\u0000\u0000\u010b\u010a\u0001\u0000\u0000\u0000\u010cJ\u0001\u0000\u0000"+
		"\u0000\u010d\u010e\u0005{\u0000\u0000\u010eL\u0001\u0000\u0000\u0000\u010f"+
		"\u0110\u0005}\u0000\u0000\u0110N\u0001\u0000\u0000\u0000\u0111\u0112\u0005"+
		"(\u0000\u0000\u0112P\u0001\u0000\u0000\u0000\u0113\u0114\u0005)\u0000"+
		"\u0000\u0114R\u0001\u0000\u0000\u0000\u0115\u0116\u0005[\u0000\u0000\u0116"+
		"T\u0001\u0000\u0000\u0000\u0117\u0118\u0005]\u0000\u0000\u0118V\u0001"+
		"\u0000\u0000\u0000\u0119\u011a\u0005=\u0000\u0000\u011a\u011b\u0005=\u0000"+
		"\u0000\u011bX\u0001\u0000\u0000\u0000\u011c\u011d\u0005!\u0000\u0000\u011d"+
		"\u011e\u0005=\u0000\u0000\u011eZ\u0001\u0000\u0000\u0000\u011f\u0120\u0005"+
		"<\u0000\u0000\u0120\u0121\u0005=\u0000\u0000\u0121\\\u0001\u0000\u0000"+
		"\u0000\u0122\u0123\u0005>\u0000\u0000\u0123\u0124\u0005=\u0000\u0000\u0124"+
		"^\u0001\u0000\u0000\u0000\u0125\u0126\u0005/\u0000\u0000\u0126`\u0001"+
		"\u0000\u0000\u0000\u0127\u0128\u0005*\u0000\u0000\u0128b\u0001\u0000\u0000"+
		"\u0000\u0129\u012a\u0005%\u0000\u0000\u012ad\u0001\u0000\u0000\u0000\u012b"+
		"\u012c\u0005=\u0000\u0000\u012cf\u0001\u0000\u0000\u0000\u012d\u012f\u0007"+
		"\t\u0000\u0000\u012e\u012d\u0001\u0000\u0000\u0000\u012f\u0130\u0001\u0000"+
		"\u0000\u0000\u0130\u012e\u0001\u0000\u0000\u0000\u0130\u0131\u0001\u0000"+
		"\u0000\u0000\u0131\u0132\u0001\u0000\u0000\u0000\u0132\u0133\u00063\u0000"+
		"\u0000\u0133h\u0001\u0000\u0000\u0000\u000b\u0000vz\u0084\u0086\u008f"+
		"\u00a1\u00f4\u00fa\u010b\u0130\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}